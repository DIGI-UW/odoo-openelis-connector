name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Setup Docker
      run: |
        if ! command -v docker &> /dev/null; then
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker
        fi
        sudo usermod -aG docker $USER
    
    - name: Build Distribution Package
      run: |
        mvn clean package
        echo "Distribution package built successfully"
    
    - name: Verify Maven Build Artifacts
      run: |
        if [ ! -f "target/odoo-openelis-connector-1.0.0-SNAPSHOT.tar.gz" ]; then
          echo "Distribution package not found"
          exit 1
        fi
        if [ ! -f "target/odoo-openelis-connector-1.0.0-SNAPSHOT.zip" ]; then
          echo "Distribution ZIP not found"
          exit 1
        fi
        echo "Maven build artifacts verified successfully"
    
    - name: Extract Distribution for Testing
      run: |
        cd target
        tar -xzf odoo-openelis-connector-1.0.0-SNAPSHOT.tar.gz
        cd odoo-openelis-connector-1.0.0-SNAPSHOT
        echo "Distribution extracted for testing"
    
    - name: Verify Odoo Initializer (Maven-managed)
      run: |
        cd target/odoo-openelis-connector-1.0.0-SNAPSHOT
        if [ ! -d "configs/odoo/addons/odoo_initializer" ]; then
          echo "Maven-managed odoo-initializer not found in distribution"
          exit 1
        fi
        echo "Maven-managed odoo-initializer verified successfully"
    
    - name: Start Database
      run: |
        cd target/odoo-openelis-connector-1.0.0-SNAPSHOT
        docker compose up -d database
        timeout 60 bash -c 'until docker compose exec -T database pg_isready -U clinlims; do sleep 2; done'
    
    - name: Test Odoo Initializer
      run: |
        cd target/odoo-openelis-connector-1.0.0-SNAPSHOT
        docker compose up -d odoo.openelis.org
        timeout 120 bash -c 'until curl -f http://localhost:8069/web/database/selector; do sleep 5; done'
        
        docker compose logs odoo.openelis.org | grep -i "initializer" || echo "No initializer logs found"
        
        curl -f http://localhost:8069/web/database/selector || exit 1
    
    - name: Cleanup
      if: always()
      run: |
        cd target/odoo-openelis-connector-1.0.0-SNAPSHOT
        docker compose down -v

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Build Distribution Package
      run: |
        mvn clean package
        echo "Distribution package built successfully"
    
    - name: Verify Build Artifacts
      run: |
        ls -la target/
        if [ ! -f "target/odoo-openelis-connector-1.0.0-SNAPSHOT.tar.gz" ]; then
          echo "Distribution TAR not found"
          exit 1
        fi
        if [ ! -f "target/odoo-openelis-connector-1.0.0-SNAPSHOT.zip" ]; then
          echo "Distribution ZIP not found"
          exit 1
        fi
        echo "Build artifacts verified successfully"
    
    - name: Upload Distribution Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: odoo-openelis-connector-distribution
        path: |
          target/odoo-openelis-connector-1.0.0-SNAPSHOT.tar.gz
          target/odoo-openelis-connector-1.0.0-SNAPSHOT.zip
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Run Maven Security Check
      run: |
        mvn dependency:check
        echo "Dependency security check completed"
    
    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'Odoo OpenELIS Connector'
        path: '.'
        format: 'HTML'
        out: 'reports'
        args: >
          --failOnCVSS 7
          --enableRetired
          --log reports/dependency-check.log 