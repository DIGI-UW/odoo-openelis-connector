<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.openelis</groupId>
    <artifactId>odoo-openelis-connector</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Odoo OpenELIS Connector</name>
    <description>Integration between Odoo and OpenELIS systems</description>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- Odoo Initializer Configuration -->
        <odooInitializerArtifactId>odoo-initializer</odooInitializerArtifactId>
        <odooInitializerVersion>2.3.0-SNAPSHOT</odooInitializerVersion>
        <odooInitializerGroupId>net.mekomsolutions.odoo</odooInitializerGroupId>
    </properties>

    <dependencies>
        <!-- Odoo Initializer Addon -->
        <dependency>
            <groupId>${odooInitializerGroupId}</groupId>
            <artifactId>${odooInitializerArtifactId}</artifactId>
            <version>${odooInitializerVersion}</version>
            <type>zip</type>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Maven Dependency Plugin to extract Odoo Initializer addon -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.6.1</version>
                <executions>
                    <execution>
                        <id>Copy Odoo Initializer add-on</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeTransitive>true</excludeTransitive>
                            <outputDirectory>
                                ${project.build.directory}/${project.artifactId}-${project.version}/configs/odoo/addons
                            </outputDirectory>
                            <includeArtifactIds>${odooInitializerArtifactId}</includeArtifactIds>
                            <failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven Resources Plugin to copy local configs -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <!-- Copy local configs/ folder (excluding odoo/addons since it's managed by dependency plugin) -->
                    <execution>
                        <id>Copy local configs/ resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/${project.artifactId}-${project.version}/configs
                            </outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/configs</directory>
                                    <excludes>
                                        <!-- Exclude odoo/addons since it's managed by dependency plugin -->
                                        <exclude>odoo/addons/</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    
                    <!-- Copy local Odoo initializer as fallback when dependency is not available -->
                    <execution>
                        <id>Copy local Odoo initializer fallback</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/${project.artifactId}-${project.version}/configs/odoo/addons
                            </outputDirectory>
                            <overwrite>false</overwrite>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/configs/odoo/addons</directory>
                                    <includes>
                                        <include>odoo_initializer/**</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven Clean Plugin to clean extracted files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.build.directory}</directory>
                            <includes>
                                <include>**/odoo_initializer/**</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- Maven Assembly Plugin to package the distribution -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <id>Package distribution</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- Repository for Mekom Solutions artifacts -->
    <repositories>
        <repository>
            <id>mekom-solutions</id>
            <name>Mekom Solutions Repository</name>
            <url>https://maven.mekomsolutions.com/repository/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

</project>
